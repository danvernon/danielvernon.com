/**
 * FORMATTING
 * --
 * Contains all of the CSS used to re-format text after using a reset sheet.
 * Also contains a lot of the generic classes used to format text/elements on
 * the page.
 */


/**
 * Core element styles
 * --
 * General elements that need custom styles without the use of classes.
 */
body, html { height:100%; }

html {
  /**
   * Font sizes and line-heights set across the website use REMs. This means
   * that they scale up/down from the base font size set against the body.
   */
  font-size: 13px;
  scroll-behavior: smooth;
  
  @include media-tablet() {
    font-size: 14px;
  }

  @include media-desktop() {
    font-size: 15px;
  }
}

body {
  background-color: #FFFFFF;
  text-align: left;
  @include type-standard($color:$color-font-body, $font-weight:400);

  @include media-tablet() {

  }

  /**
   * Prevent transitions during re-sizing for certain elements
   */
  &.re-sizing {
    .prime-nav__list {
        transition: none !important;
    }
  }
}

a {
  color: $color-font-link;
  cursor: pointer;
  text-decoration: none;

  &:hover {
    color: darken($color-font-link, 10%);
  }

  &:visited, &:focus {
    outline: none;
    text-decoration: none;
  }
}


/**
 * Custom class styles
 * --
 * Generic regular use classes and styles that can be used throughout the
 * website.
 */

/**
 * Clear content
 */
.clear { clear:both; }
.clear-left { clear:left; }
.clear-right { clear:right; }
.clearfix, .clear-fix, .sink { @include clearfix; }
.break-line { clear:both; display:block; }

/**
 * Consistant margin padding between elements
 */
.no-top { margin-top:0 !important; }
.no-bottom { margin-bottom:0 !important; }
.push-top, .push-top-20 { margin-top:20px !important; }
.push-bottom, .push-bottom-20 { margin-bottom:20px !important; }

/**
 * Prevent text from wrapping onto multiple lines
 */
.no-wrap { white-space:nowrap; }
.ellipsis { @include ellipsis(); }

/**
 * Float alignment variations
 */
 .left { float:left !important; }
 .right { float:right !important; }

/**
 * Text alignment variations
 */
.align-left, .l { text-align:left !important; }
.align-center, .c { text-align:center !important; }
.align-right, .r { text-align:right !important; }

/**
 * Consistant font sizes
 */
.small-text { @include type-small(); }
.standard-text { @include type-standard(); }
.large-text { @include type-large(); }

/**
 * Font weights
 */
.light { font-weight:300 !important; }
.norm { font-weight:400 !important; }
.semi-bold { font-weight:500 !important; }
.bold { font-weight:700 !important; }

/**
 * Remove scrolling on an element
 */
.no-scroll { overflow:hidden; }

/**
 * Font weight/style/transform variations
 */
.capitalise, .capitalize { text-transform:capitalize !important; }
.uppercase { text-transform:uppercase !important; }
.lowercase { text-transform:lowercase !important; }


/**
 * Text re-formatting
 * --
 * Styles used to re-add generic browser formatting HTML elements within a
 * content area so that paragraphs, lists, and tables, etc, all look correctly
 * if they are direct children of the container with this class. Formatted also
 * trims the top margin and bottom margin from the first child and last child.
 */
.formatted {
    @include clearfix;

    > h1 a, > h2 a, > h3 a,
    > p > a, > address > a,
    > ul a,
    > ol a,
    > table a,
    > a {
        color:$color-font-link;

        &:hover {
          color: darken($color-font-link, 10%);
          text-decoration: underline;
        }
    }

    > h1, > h2, > h3, > h4 {
        margin:1em 0 0.5em;
    }

    > h1 { @include type-h1(); }
    > h2 { @include type-h2(); }
    > h3 { @include type-h3(); }
    > h4 { @include type-h4(); }

    > p, > address { margin:0 0 1em; }

    > img,
    > .ce-element--type-image,
    > iframe,
    > .ce-element--type-video {
        clear:both;
        display:block;
        margin:1.5em auto;
        max-width:100%;

        &.align-left {
            clear:left;
            float:left;
            margin-top:0;
            margin-right:1.5em;
        }

        &.align-right {
            clear:right;
            float:right;
            margin-top:0;
            margin-left:1.5em;
        }
    }

    > img, > .ce-element--type-image {
        height:auto;
    }

    > ul {
        list-style-type:disc;
        margin:0 0 1em;
        padding:0 0 0 18px;

        > li ul, > li ol {
            margin:0 0 1em;
            padding:8px 0 0 18px;
        }

        > li ul { list-style-type:circle; }
        > li ol { list-style:lower-alpha; }
    }

    > ol {
        list-style-type:decimal;
        margin:0 0 1em;
        padding:0 0 0 19px;

        > li ol, > li ul {
            margin:0 0 1em;
            padding:8px 0 0 19px;
        }

        > li ol { list-style:lower-alpha; }
        > li ul { list-style-type:circle; }
    }

    > *:first-child { margin-top:0 !important; }
    > *:last-child,
    > ul > li:last-child ul,
    > ol > li:last-child ol {
        margin-bottom:0 !important;
    }

    > .btn { margin:1em 0; }
}


/**
 * Trim
 * --
 * Used to remove the top margin from the first child and the bottom margin from
 * the last child. This is a useful alternative to using .formatted.
*/
.trim {
    > :first-child { margin-top:0 !important; }
    > :last-child { margin-bottom:0 !important; }
}

.display-none {
  display: none!important;
}

a.disabled {
  /* Make the disabled links grayish*/
  opacity: .5;
  /* And disable the pointer events */
  pointer-events: none;
}
